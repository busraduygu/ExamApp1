// <auto-generated />
using System;
using ExamApp.SqliteData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExamApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220422074835_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ExamApp.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("rlt_Created_Exam_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<int>("rlt_Creator_Admin_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Creator_Admin_Id");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("ExamApp.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int>("rlt_Question_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Question_Id");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.Property<int?>("rlt_Correct_Option_Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("rlt_Exam_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("rlt_Correct_Option_Id");

                    b.HasIndex("rlt_Exam_Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ExamApp.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.Property<int>("rlt_Exam_Id")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.HasOne("ExamApp.Models.Admin", "CreatorAdmin")
                        .WithMany()
                        .HasForeignKey("rlt_Creator_Admin_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatorAdmin");
                });

            modelBuilder.Entity("ExamApp.Models.Option", b =>
                {
                    b.HasOne("ExamApp.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("rlt_Question_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.HasOne("ExamApp.Models.Option", "CorrectOption")
                        .WithMany()
                        .HasForeignKey("rlt_Correct_Option_Id");

                    b.HasOne("ExamApp.Models.Exam", "Exam")
                        .WithMany("Questions")
                        .HasForeignKey("rlt_Exam_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CorrectOption");

                    b.Navigation("Exam");
                });

            modelBuilder.Entity("ExamApp.Models.Exam", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("ExamApp.Models.Question", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
